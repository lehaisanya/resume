{"version":3,"sources":["blocks/AppHeader/styles.module.css","types.ts","lang/data.ts","lang/ru.ts","lang/en.ts","lang/index.ts","lang/ua.ts","blocks/AppHeader/index.tsx","components/InfoLine/index.tsx","assets/avatar.png","blocks/AppSider/index.tsx","components/AppSection/index.tsx","blocks/DescriptionSection/index.tsx","components/SectionTitle/index.tsx","components/Education/index.tsx","blocks/EducationSection/index.tsx","blocks/ExperienceSection/index.tsx","utils.ts","components/Skill/index.tsx","blocks/SkillsSection/index.tsx","blocks/ProjectsSection/index.tsx","blocks/AppContent/index.tsx","blocks/App/index.tsx","index.tsx","blocks/AppSider/styles.module.css","blocks/App/styles.module.css"],"names":["module","exports","SkillLevel","data","personal","github","telephone","telegram","email","skills","name","level","Professional","Advanced","Confident","lang","words","birthday","place","adress","personalData","education","experience","projects","uses","languages","more","description","title","salary","text","educations","start","end","educ","extra","period","technologies","link","inProgress","makeLang","langs","ua","ru","en","LangContext","React","createContext","changeLang","useDict","useContext","AppHeader","toggleCollapsed","useBreakpoint","xs","md","size","justify","align","type","icon","className","onClick","styles","nameTitle","Group","defaultValue","onChange","e","target","value","buttonStyle","Button","InfoLine","children","strong","icons","infoLineIcon","AppSider","sider","src","avatar","alt","infoSectionTitle","href","rel","map","i","span","AppSection","style","marginLeft","marginBottom","DescriptionSection","fontSize","SectionTitle","Education","flex","EducationSection","mode","Item","Panel","Collapse","ExperienceSection","defaultActiveKey","exp","header","toPercent","Basic","SkillComponent","textAlign","percent","showInfo","steps","trailColor","SkillsSection","gutter","skill","sm","lg","xl","xxl","Skill","ProjectsSection","project","hoverable","height","tech","listStyle","AppContent","App","useState","setLang","isMiddle","collapsed","setCollapsed","useEffect","prev","Provider","contentLayout","theme","width","padding","placement","visible","onClose","content","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2e8c1cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameTitle\":\"styles_nameTitle__2XjcT\"};","export interface WordsData {\r\n    name: string\r\n    birthday: string\r\n    place: string\r\n    adress: string\r\n    telephone: string\r\n    telegram: string\r\n    email: string\r\n    personalData: string\r\n    education: string\r\n    experience: string\r\n    skills: string\r\n    projects: string,\r\n    uses: string,\r\n    languages: string,\r\n    more: string\r\n}\r\n\r\nexport interface PersonalData {\r\n    name: string\r\n    birthday: string\r\n    place: string\r\n}\r\n\r\nexport interface LanguagesData {\r\n    name: string\r\n    level: string\r\n}\r\n\r\nexport interface DescriptionData {\r\n    title: string\r\n    salary: string\r\n    text: string\r\n}\r\n\r\nexport interface EducationData {\r\n    start: string\r\n    end: string\r\n    educ: string\r\n    place: string\r\n    extra?: string\r\n}\r\n\r\nexport interface ExperienceData {\r\n    title: string\r\n    period: string,\r\n    description: string\r\n}\r\n\r\nexport enum SkillLevel {\r\n    Basic,\r\n    Confident,\r\n    Advanced,\r\n    Professional\r\n}\r\n\r\nexport interface SkillData {\r\n    name: string\r\n    level: SkillLevel\r\n}\r\n\r\nexport interface ProjectData {\r\n    name: string\r\n    description: string\r\n    technologies: string[]\r\n    link?: string\r\n    inProgress?: boolean\r\n}\r\n\r\nexport type LangType = 'ua' | 'ru' | 'en'\r\n\r\nexport interface Lang {\r\n    words: WordsData,\r\n    personal: PersonalData\r\n    languages: LanguagesData[]\r\n    description: DescriptionData\r\n    educations: EducationData[]\r\n    experience: ExperienceData[]\r\n    projects: ProjectData[]\r\n}\r\n","import { SkillData, SkillLevel } from 'types'\r\n\r\nconst personal = {\r\n    github: 'lehaisanya',\r\n    telephone: '+380675976212',\r\n    telegram: 'lehaisanya',\r\n    email: 'lehaisanya@gmail.com',\r\n}\r\n\r\nconst skills: SkillData[] = [\r\n    {\r\n        name: 'JavaScript (ES6)',\r\n        level: SkillLevel.Professional\r\n    },\r\n    {\r\n        name: 'Node.js (Express)',\r\n        level: SkillLevel.Professional\r\n    },\r\n    {\r\n        name: 'React',\r\n        level: SkillLevel.Professional\r\n    },\r\n    {\r\n        name: 'Redux',\r\n        level: SkillLevel.Advanced\r\n    },\r\n    {\r\n        name: 'Typescript',\r\n        level: SkillLevel.Advanced\r\n    },\r\n    {\r\n        name: 'Git',\r\n        level: SkillLevel.Advanced\r\n    },\r\n    {\r\n        name: 'REST API',\r\n        level: SkillLevel.Advanced\r\n    },\r\n    {\r\n        name: 'HTML5/CSS3',\r\n        level: SkillLevel.Professional\r\n    },\r\n    {\r\n        name: 'SASS',\r\n        level: SkillLevel.Advanced\r\n    },\r\n    {\r\n        name: 'MongoDB',\r\n        level: SkillLevel.Advanced\r\n    },\r\n    {\r\n        name: 'Webpack',\r\n        level: SkillLevel.Confident\r\n    },\r\n    {\r\n        name: 'Lua',\r\n        level: SkillLevel.Advanced\r\n    }\r\n]\r\n\r\nconst data = {\r\n    personal,\r\n    skills\r\n}\r\n\r\nexport default data\r\n","import { Lang } from 'types'\r\n\r\nconst lang: Lang = {\r\n    words: {\r\n        name: 'Имя',\r\n        birthday: 'День рождения',\r\n        place: 'Место нахождения',\r\n        adress: 'Адрес',\r\n        telephone: 'Телефон',\r\n        telegram: 'Телеграм',\r\n        email: 'Электронная почта',\r\n        personalData: 'Личная информация',\r\n        education: 'Образование',\r\n        experience: 'Опыт работы',\r\n        skills: 'Навыки',\r\n        projects: 'Проекты',\r\n        uses: 'Использованые технологии',\r\n        languages: 'Языки',\r\n        more: 'Больше'\r\n    },\r\n    personal: {\r\n        name: 'Александр Соляр',\r\n        birthday: '4 Января 1999',\r\n        place: 'Киевская обл.'\r\n    },\r\n    languages: [\r\n        {\r\n            name: 'Украинский',\r\n            level: 'Родная'\r\n        },\r\n        {\r\n            name: 'Русский',\r\n            level: 'С1'\r\n        },\r\n        {\r\n            name: 'Английский',\r\n            level: 'B1'\r\n        }\r\n    ],\r\n    description: {\r\n        title: 'React FrontEnd Developer',\r\n        salary: 'Ожидаемая зарплата от 600$',\r\n        text: `Я разрабатываю уже в течение 6 лет. Самостоятельно изучал различные языки программирования, такие как Lua, Haskell, C++, Python. В данный момент остановился на Javascript и Typescript. Особенности языков знаю досконально, поскольку некогда писал свою надстройку с типизацией для Lua. Мне это просто нравится. Достаточно уверенно ориентируюсь в ООП, REST API и других архитектурных принципах. Ищу место, где будет интересно и легко работать, с возможностью улучшения своих навыков, в любых направлениях. Способен быстро учиться и постоянно заниматься самообразованием.`\r\n    },\r\n    educations: [\r\n        {\r\n            start: 'Сентябрь 2006',\r\n            end: 'Май 2014',\r\n            educ: 'Неполное среднее образование',\r\n            place: 'Глеваховский ООШ №1 I-III ступеней'\r\n        },\r\n        {\r\n            start: 'Сентябрь 2014',\r\n            end: 'Май 2018',\r\n            educ: 'Младший бакалавр - Проектирование программного обеспечения',\r\n            place: 'Колледж НАУ, Васильков, Украина'\r\n        },\r\n        {\r\n            start: 'Сентябрь 2018',\r\n            end: 'Сейчас',\r\n            educ: 'Бакалавр - Инженерия программного обеспечения',\r\n            place: 'Государственный Университет Телекоммуникаций, Киев, Украина',\r\n            extra: '5 курс (последний)'\r\n        }\r\n    ],\r\n    experience: [\r\n        {\r\n            title: 'M.E.Doc - Работник техподдержки',\r\n            period: '3 месяца',\r\n            description: `Для работы нужно было досконально знать логику работы программы M.E.Doc чтобы иметь возможность решать проблемы клиентов очень быстро и сразу диагностировать возможную причину проблемы с последующим объяснением ее решения.`\r\n        },\r\n        {\r\n            title: 'Интернет провайдер Crystall - Системный администратор',\r\n            period: '2 года',\r\n            description: `Писал скрипты на Node.js для ускорения некоторых работ. Написал собственный консольный клиент для протокола telnet, с подсветкой синтаксиса и другими фичами. Также занимался написанием шаблонов конфигураций для устройств (свичей, олтов и тд.) на шаблонизаторе Pug. После себя оставил базу готовых шаблонов.`\r\n        }\r\n    ],\r\n    projects: [\r\n        {\r\n            name: 'Tua',\r\n            description: `Надстройка для Lua с типизацией, такая как Typescript (собственно Typescript я и вдохновлялся и черпал из него идеи). Была темой дипломной работы. Писался в целях саморазвития. Я досконально изучал компиляторы и различные системы типизации, механизмы взаимодействия в языках программирования. Прочитал много книг по теме. Первый проект в котором я учился рефакторинга и оптимизации. На данный момент проект заброшен. Возможно вернусь к нему позже.`,\r\n            technologies: ['Node.js']\r\n        },\r\n        {\r\n            name: 'TelnetMy',\r\n            description: `Консольный клиент для протокола telnet. Работа системного администратора требует много рутинных действий. Поэтому я решил автоматизировать частое действие: авторизация на устройстве. По возможности старался наполнять проект новыми фичам. Так в нем появилась подсветка текста: различных чисел, дат, серийных номеров и др. Также появился список с устройствами, где можно сразу выбрать нужный, не вводя его IP. А также появился список пользователей, где можно было выбрать пользователя от которого мы хотим авторизоваться на устройстве.`,\r\n            technologies: ['Node.js'],\r\n            link: 'https://github.com/lehaisanya/telnet-my'\r\n        },\r\n        {\r\n            name: 'Resume',\r\n            description: `Этот же проект, для примера.`,\r\n            technologies: ['React', 'Typescript', 'Antd'],\r\n            link: 'https://github.com/lehaisanya/resume'\r\n        },\r\n        {\r\n            name: 'Articles Here',\r\n            description: `Онлайн редактор статей. Тестовый проект для портфолио. В нем я демонстрирую свои знания технологий React/Redux. Полноценный проект на MERN. В данный момент в процессе разработки.`,\r\n            technologies: ['React', 'Redux', 'MongoDB', 'Node.js', 'Typescript', 'Antd'],\r\n            link: 'https://github.com/lehaisanya/articles-here',\r\n            inProgress: true\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport default lang\r\n","import { Lang } from 'types'\r\n\r\nconst lang: Lang = {\r\n    words: {\r\n        name: 'Name',\r\n        birthday: 'Birthday',\r\n        place: 'Location',\r\n        adress: 'Address',\r\n        telephone: 'Phone',\r\n        telegram: 'Telegram',\r\n        email: 'Email',\r\n        personalData: 'Personal information',\r\n        education: 'Education',\r\n        experience: 'Experience',\r\n        skills: 'Skills',\r\n        projects: 'Projects',\r\n        uses: 'Uses technologies',\r\n        languages: 'Languages',\r\n        more: \"More\"\r\n    },\r\n    personal: {\r\n        name: 'Alexander Solyar',\r\n        birthday: 'January 4, 1999',\r\n        place: 'Kyiv region'\r\n    },\r\n    languages: [\r\n        {\r\n            name: 'Ukrainian',\r\n            level: 'Native'\r\n        },\r\n        {\r\n            name: 'Russian',\r\n            level: 'С1'\r\n        },\r\n        {\r\n            name: 'English',\r\n            level: 'B1'\r\n        }\r\n    ],\r\n    description: {\r\n        title: 'React FrontEnd Developer',\r\n        salary: 'Expected salary from $600',\r\n        text: `I have been developing for 6 years. Independently studied various programming languages, such as Lua, Haskell, C++, Python. At the moment I settled on Javascript and Typescript. I know the peculiarities of languages thoroughly, because I once wrote my superstructure with typification for Lua. I just like it. I am quite confident in OOP, REST API and other architectural principles. I am looking for a place where it will be interesting and easy to work, with the opportunity to improve their skills in any direction. Able to learn quickly and constantly engage in self-education.`\r\n    },\r\n    educations: [\r\n        {\r\n            start: 'September 2006',\r\n            end: 'May 2014',\r\n            educ: 'Incomplete secondary education',\r\n            place: 'Glevakhiv Secondary School №1 I-III degrees'\r\n        },\r\n        {\r\n            start: 'September 2014',\r\n            end: 'May 2018',\r\n            educ: 'Junior Bachelor - Software Design',\r\n            place: 'College NAU, Vasilkov, Ukraine'\r\n        },\r\n        {\r\n            start: 'September 2018',\r\n            end: 'NOW',\r\n            educ: 'Bachelor - Software Engineering',\r\n            place: 'State University of Telecommunications, Kyiv, Ukraine',\r\n            extra: '5th year (last)'\r\n        }\r\n    ],\r\n    experience: [\r\n        {\r\n            title: 'M.E.Doc - Technical support worker',\r\n            period: '3 months',\r\n            description: `To work, it was necessary to know the logic of the M.E.Doc program to be able to solve customer problems very quickly and immediately diagnose the possible cause of the problem with further explanation of its solution.`\r\n        },\r\n        {\r\n            title: 'Crystall ISP - System Administrator',\r\n            period: '2 years',\r\n            description: `Wrote scripts on Node.js to speed up some work. Wrote my own console client for the telnet protocol, with syntax highlighting and other features. He also wrote configuration templates for devices (switch, olts, etc.) on the Pug template engine. He left behind a database of ready-made templates.`\r\n        }\r\n    ],\r\n    projects: [\r\n        {\r\n            name: 'Tua',\r\n            description: `An superstructure for Lua with typification, such as Typescript (actually Typescript, I was inspired and drew ideas from it). It was the topic of the thesis. Written for self-development. I thoroughly studied compilers and various typing systems, mechanisms of interaction in programming languages. I read many books on the subject. The first project in which I studied refactoring and optimization. At the moment the project is abandoned. Maybe I'll come back to him later.`,\r\n            technologies: ['Node.js']\r\n        },\r\n        {\r\n            name: 'TelnetMy',\r\n            description: `Console client for telnet protocol. The work of a system administrator requires a lot of routine actions. So I decided to automate the most common action: authorization on the device. Whenever possible I tried to fill the project with new features. So there was a backlight of the text: different numbers, dates, serial numbers, etc. There is also a list of devices where you can immediately select the desired one without entering its IP. And there was a list of users, where you could also select the user from whom we want to log in to the device.`,\r\n            technologies: ['Node.js'],\r\n            link: 'https://github.com/lehaisanya/telnet-my'\r\n        },\r\n        {\r\n            name: 'Resume',\r\n            description: `The same project, for example.`,\r\n            technologies: ['React', 'Typescript', 'Antd'],\r\n            link: 'https://github.com/lehaisanya/resume'\r\n        },\r\n        {\r\n            name: 'Articles Here',\r\n            description: `Online article editor. Test project for portfolio. In it I demonstrate my knowledge of React/Redux technologies. A full-fledged project at MERN. Currently under development.`,\r\n            technologies: ['React', 'Redux', 'MongoDB', 'Node.js', 'Typescript', 'Antd'],\r\n            link: 'https://github.com/lehaisanya/articles-here',\r\n            inProgress: true\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport default lang\r\n","import React, { useContext } from 'react'\r\nimport { Lang, LangType } from 'types'\r\n\r\nimport data from './data'\r\nimport ua from './ua'\r\nimport ru from './ru'\r\nimport en from './en'\r\n\r\nconst makeLang = (lang: Lang) => ({\r\n    ...lang,\r\n    skills: data.skills,\r\n    personal: {\r\n        ...lang.personal,\r\n        ...data.personal\r\n    }\r\n})\r\n\r\nconst langs = {\r\n    ua: makeLang(ua),\r\n    ru: makeLang(ru),\r\n    en: makeLang(en)\r\n}\r\n\r\ninterface LangContextProps {\r\n    lang: LangType\r\n    changeLang: (lang: LangType) => void\r\n}\r\n\r\nexport const LangContext = React.createContext<LangContextProps>({\r\n    lang: 'ua',\r\n    changeLang: (lang: LangType): void => {}\r\n})\r\n\r\nexport const useDict = () => {\r\n    const { lang } = useContext(LangContext)\r\n\r\n    switch (lang) {\r\n        case 'ua': return langs.ua\r\n        case 'ru': return langs.ru\r\n        case 'en': return langs.en\r\n        default: return langs.ua\r\n    }\r\n}\r\n\r\n","import { Lang } from 'types'\r\n\r\nconst lang: Lang = {\r\n    words: {\r\n        name: 'Ім\\'я',\r\n        birthday: 'День народження',\r\n        place: 'Місце знаходження',\r\n        adress: 'Адреса',\r\n        telephone: 'Телефон',\r\n        telegram: 'Телеграм',\r\n        email: 'Електронна пошта',\r\n        personalData: 'Особиста інформація',\r\n        education: 'Освіта',\r\n        experience: 'Досвід роботи',\r\n        skills: 'Навички',\r\n        projects: 'Проекти',\r\n        uses: 'Використанні технології',\r\n        languages: 'Мови',\r\n        more: 'Більше'\r\n    },\r\n    personal: {\r\n        name: 'Олександр Соляр',\r\n        birthday: '4 Cічня 1999',\r\n        place: 'Київська обл.'\r\n    },\r\n    languages: [\r\n        {\r\n            name: 'Українська',\r\n            level: 'Рідна'\r\n        },\r\n        {\r\n            name: 'Російська',\r\n            level: 'С1'\r\n        },\r\n        {\r\n            name: 'Англійська',\r\n            level: 'B1'\r\n        }\r\n    ],\r\n    description: {\r\n        title: 'React FrontEnd Developer',\r\n        salary: 'Очікувана зарплата від 600$',\r\n        text: `Я розробляю вже протягом 6 років. Самостійно вивчав різні мови програмування, такі як Lua, Haskell, C++, Python. В данний момент зупинився на Javascript і Typescript. Особливості мов знаю досконально, оскільки колись писав свою надбудову з типізацією для Lua. Мені це просто подобається. Достатньо впевнено орієнтуюсь в ООП, REST API та інших архітектурних принципах. Шукаю місце, де буде цікаво і легко працювати, з можливістю покращення своїх навиків, у будь-яких напрямках. Здатний швидко вчитися і постійно займатися самоосвітою.`\r\n    },\r\n    educations: [\r\n        {\r\n            start: 'Вересень 2006',\r\n            end: 'Травень 2014',\r\n            educ: 'Неповна середня освіта',\r\n            place: 'Глевахівська ЗОШ №1 І-ІІІ ступенів'\r\n        },\r\n        {\r\n            start: 'Вересень 2014',\r\n            end: 'Травень 2018',\r\n            educ: 'Молодший бакалавр - Проектування програмного забезпечення',\r\n            place: 'Коледж НАУ, Васильків, Україна'\r\n        },\r\n        {\r\n            start: 'Вересень 2018',\r\n            end: 'Зараз',\r\n            educ: 'Бакалавр - Інженерія програмного забезпечення',\r\n            place: 'Державний Університет Телекомунікацій, Київ, Україна',\r\n            extra: '5 курс (останній)'\r\n        }\r\n    ],\r\n    experience: [\r\n        {\r\n            title: 'M.E.Doc - Працівник техпідтримки',\r\n            period: '3 місяці',\r\n            description: `Для роботи потрібно було досконально знати логіку роботи програми M.E.Doc щоб мати можливість вирішувати проблеми клієнтів дуже швидко і одразу діагностувати можливу причину проблеми з подальшим поясненням її вирішення.`\r\n        },\r\n        {\r\n            title: 'Інтернет провайдер Crystall - Системний адміністратор',\r\n            period: '2 роки',\r\n            description: `Писав скрипти на Node.js для пришвидшення деяких робіт. Написав власний консольний клієнт для протоколу telnet, з підсвіткою синтаксису та іншими фічами. Також займався написанням шаблонів конфігурацій для пристроїв (свічів, олтів і тд.) на шаблонизаторі Pug. Після себе залишив базу готових шаблонів.`\r\n        }\r\n    ],\r\n    projects: [\r\n        {\r\n            name: 'Tua',\r\n            description: `Надбудова для Lua з типізацією, така як Typescript (власне Typescript я і надихався і черпав з нього ідеї). Була темою дипломної роботи. Писався в цілях саморозвитку. Я досконально вивчав компілятори і різні системи типізації, механізми взаємодії в мовах програмування. Прочитав багато книг на тему. Перший проект в якому я навчався рефакторингу і оптимізації. На данний момент проект закинуто. Можливо повернусь до нього пізніше.`,\r\n            technologies: ['Node.js']\r\n        },\r\n        {\r\n            name: 'TelnetMy',\r\n            description: `Консольний клієнт для протоколу telnet. Робота системного адміністратору потребує багато рутинних дій. Тому я вирішив автоматизувати найчастішу дію: авторизація на пристрої. По можливості старався наповнювати проект новими фічами. Так в ньому з'явилась підсвідка тексту: різних чисел, дат, серійних номерів, та ін. Також з'явився список з пристроями, де можна одразу обирати потрібний, не вводячи його IP. А також з'явився список користувачів, де також можна було обрати користувача від якого ми хочемо авторизуватись на пристрої.`,\r\n            technologies: ['Node.js'],\r\n            link: 'https://github.com/lehaisanya/telnet-my'\r\n        },\r\n        {\r\n            name: 'Resume',\r\n            description: `Цей самий проект, для прикладу.`,\r\n            technologies: ['React', 'Typescript', 'Antd'],\r\n            link: 'https://github.com/lehaisanya/resume'\r\n        },\r\n        {\r\n            name: 'Articles Here',\r\n            description: `Онлайн редактор статтів. Тестовий проект для портфоліо. В ньому я демонструю свої знання технологій React/Redux. Повноцінний проект на MERN. В данний момент в процесі розробки.`,\r\n            technologies: ['React', 'Redux', 'MongoDB', 'Node.js', 'Typescript', 'Antd'],\r\n            link: 'https://github.com/lehaisanya/articles-here',\r\n            inProgress: true\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport default lang\r\n","import React, { FC, useContext } from 'react'\r\nimport styles from './styles.module.css'\r\nimport { LangContext, useDict } from 'lang'\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint'\r\nimport { RadioChangeEvent } from 'antd/lib/radio/interface'\r\nimport Row from 'antd/lib/row'\r\nimport Col from 'antd/lib/col'\r\nimport Space from 'antd/lib/space'\r\nimport Button from 'antd/lib/button'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport Radio from 'antd/lib/radio'\r\n\r\ninterface AppHeaderProps {\r\n    toggleCollapsed: () => void\r\n}\r\n\r\nconst AppHeader: FC<AppHeaderProps> = ({ toggleCollapsed }) => {\r\n    const { changeLang } = useContext(LangContext)\r\n    const { personal } = useDict()\r\n    const { xs, md } = useBreakpoint()\r\n\r\n    const size = xs ? 'small' : 'middle'\r\n\r\n    const changeLangHandler = (e: RadioChangeEvent) => {\r\n        changeLang(e.target.value)\r\n    }\r\n\r\n    const menuButtonClickHandler = () => {\r\n        toggleCollapsed()\r\n    }\r\n\r\n    return (\r\n        <Row justify=\"space-between\" align=\"middle\">\r\n            <Col>\r\n                <Space align=\"center\">\r\n                    { !md ? <Button type=\"link\" icon={<i className=\"fi fi-rr-list\" />} onClick={menuButtonClickHandler} /> : null}\r\n                    <Title level={3} className={styles.nameTitle}>\r\n                        {personal.name}\r\n                    </Title>\r\n                </Space>\r\n            </Col>\r\n            <Col>\r\n                <Radio.Group defaultValue=\"ua\" onChange={changeLangHandler} size={size} buttonStyle=\"solid\">\r\n                    <Radio.Button value=\"ua\">UA</Radio.Button>\r\n                    <Radio.Button value=\"ru\">RU</Radio.Button>\r\n                    <Radio.Button value=\"en\">EN</Radio.Button>\r\n                </Radio.Group>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default AppHeader\r\n","import Space from 'antd/lib/space'\r\nimport Text from 'antd/lib/typography/Text'\r\nimport React, { FC, ReactNode } from 'react'\r\n\r\ninterface InfoLineProps {\r\n    icon: ReactNode\r\n    title: string,\r\n    children: ReactNode\r\n}\r\n\r\nconst InfoLine: FC<InfoLineProps> = ({ icon, title, children }) => {\r\n    return (\r\n        <div>\r\n            <Space align=\"center\">\r\n                {icon}\r\n                <div>\r\n                    <div><Text strong>{title}</Text></div>\r\n                    <div>{children}</div>\r\n                </div>\r\n            </Space>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoLine\r\n","export default __webpack_public_path__ + \"static/media/avatar.578bb986.png\";","import React from 'react'\r\nimport Avatar from 'antd/lib/avatar'\r\nimport Row from 'antd/lib/row'\r\nimport Col from 'antd/lib/col'\r\nimport InfoLine from 'components/InfoLine'\r\nimport { useDict } from 'lang'\r\nimport styles from './styles.module.css'\r\nimport avatar from 'assets/avatar.png'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport Text from 'antd/lib/typography/Text'\r\nimport GithubOutlined from '@ant-design/icons/GithubOutlined'\r\n\r\nconst icons = {\r\n    name: <i className={\"fi fi-rr-user \" + styles.infoLineIcon} />,\r\n    birthday: <i className={\"fi fi-rr-calendar \" + styles.infoLineIcon} />,\r\n    place: <i className={\"fi fi-rr-marker \" + styles.infoLineIcon} />,\r\n    telephone: <i className={\"fi fi-rr-smartphone \" + styles.infoLineIcon} />,\r\n    github: <GithubOutlined className={styles.infoLineIcon} />,\r\n    telegram: <i className={\"fi fi-rr-paper-plane \" + styles.infoLineIcon} />,\r\n    email: <i className={\"fi fi-rr-envelope \" + styles.infoLineIcon} />\r\n}\r\n\r\nfunction AppSider() {\r\n    const { personal, words, languages } = useDict()\r\n    return (\r\n        <div className={styles.sider}>\r\n            <Avatar size={150} src={avatar} className={styles.avatar} alt=\"Аватарка\" />\r\n\r\n            <Title level={5} className={styles.infoSectionTitle}>{words.personalData}</Title>\r\n\r\n            <InfoLine icon={icons.name} title={words.name}>\r\n                {personal.name}\r\n            </InfoLine>\r\n            <InfoLine icon={icons.birthday} title={words.birthday}>\r\n                {personal.birthday}\r\n            </InfoLine>\r\n            <InfoLine icon={icons.place} title={words.place}>\r\n                {personal.place}\r\n            </InfoLine>\r\n            <InfoLine icon={icons.telephone} title={words.telephone}>\r\n                <a href={\"tel:\" + personal.telephone}>{personal.telephone}</a>\r\n            </InfoLine>\r\n            <InfoLine icon={icons.github} title=\"Github\">\r\n                <a href={\"https://github.com/\" + personal.github} target=\"_blank\" rel=\"noreferrer\">{personal.github}</a>\r\n            </InfoLine>\r\n            <InfoLine icon={icons.telegram} title={words.telegram}>\r\n                <a href={\"https://t.me/\" + personal.telegram} target=\"_blank\" rel=\"noreferrer\">{personal.telegram}</a>\r\n            </InfoLine>\r\n            <InfoLine icon={icons.email} title={words.email}>\r\n                <a href={\"mailto:\" + personal.email}>{personal.email}</a>\r\n            </InfoLine>\r\n            \r\n            <Title level={5} className={styles.infoSectionTitle}>{words.languages}</Title>\r\n\r\n            {languages.map((lang, i) => (<div key={i}>\r\n                <Row>\r\n                    <Col span={12}><Text strong>{lang.name}</Text>:</Col>\r\n                    <Col span={12}>{lang.level}</Col>\r\n                </Row>\r\n            </div>))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppSider\r\n","import React, { FC } from 'react'\r\n\r\ninterface AppSectionProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst AppSection: FC<AppSectionProps> = ({ children }) => {\r\n    return (\r\n        <div style={{ marginLeft: 5, marginBottom: 10 }}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppSection\r\n","import React from 'react'\r\nimport AppSection from 'components/AppSection'\r\nimport { useDict } from 'lang'\r\nimport Title from 'antd/lib/typography/Title'\r\n\r\n\r\nfunction DescriptionSection() {\r\n    const { description } = useDict()\r\n\r\n    return (\r\n        <AppSection>\r\n            <Title level={2}>{description.title}</Title>\r\n            <div style={{ fontSize: 20 }}>\r\n                {description.salary}\r\n            </div>\r\n            <div>\r\n                {description.text}\r\n            </div>\r\n        </AppSection>\r\n    )\r\n}\r\n\r\nexport default DescriptionSection\r\n","import Space from 'antd/lib/space'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport React, { FC, ReactNode } from 'react'\r\n\r\ninterface SectionTitleProps {\r\n    icon: ReactNode\r\n    children: string\r\n}\r\n\r\nconst SectionTitle: FC<SectionTitleProps> = ({ icon, children }) => {\r\n    return (\r\n        <Title level={3}>\r\n            <Space>\r\n                {icon}\r\n                {children}\r\n            </Space>\r\n        </Title>\r\n    )\r\n}\r\n\r\nexport default SectionTitle","import Col from 'antd/lib/col'\r\nimport Row from 'antd/lib/row'\r\nimport Text from 'antd/lib/typography/Text'\r\nimport React, { FC } from 'react'\r\nimport { EducationData } from 'types'\r\n\r\ninterface EducationProps {\r\n    data: EducationData\r\n}\r\n\r\nconst Education: FC<EducationProps> = ({ data: { start, end, educ, place, extra }}) => {\r\n    return (\r\n        <Row>\r\n            <Col flex=\"200px\">{start} - {end}</Col>\r\n            <Col flex=\"auto\">\r\n                <div>\r\n                    <div>\r\n                        <Text strong>{educ}</Text>\r\n                    </div>\r\n                    <div>\r\n                        {place}\r\n                    </div>\r\n                    { extra ? <div>\r\n                        {extra}\r\n                    </div> : null }\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Education\r\n","import React from 'react'\r\nimport AppSection from 'components/AppSection'\r\nimport SectionTitle from 'components/SectionTitle'\r\nimport Education from 'components/Education'\r\nimport { useDict } from 'lang'\r\nimport Timeline from 'antd/lib/timeline'\r\n\r\nfunction EducationSection() {\r\n    const { educations, words } = useDict()\r\n\r\n    return (\r\n        <AppSection>\r\n            <SectionTitle icon={<i className=\"fi fi-rr-graduation-cap\" />}>{words.education}</SectionTitle>\r\n\r\n            <Timeline mode=\"left\">\r\n                {educations.map((educ, i) => (<Timeline.Item key={i}>\r\n                    <Education data={educ} key={i} />\r\n                </Timeline.Item>))}\r\n            </Timeline>\r\n        </AppSection>\r\n    )\r\n}\r\n\r\nexport default EducationSection\r\n","import React from 'react'\r\nimport AppSection from 'components/AppSection'\r\nimport SectionTitle from 'components/SectionTitle'\r\nimport { useDict } from 'lang'\r\nimport Collapse from 'antd/lib/collapse'\r\n\r\nconst { Panel } = Collapse\r\n\r\nfunction ExperienceSection() {\r\n    const { experience, words } = useDict()\r\n    return (\r\n        <AppSection>\r\n            <SectionTitle icon={<i className=\"fi fi-rr-briefcase\" />}>{words.experience}</SectionTitle>\r\n\r\n            <Collapse defaultActiveKey={[0, 1]}>\r\n                {experience.map((exp, i) => (<Panel key={i} header={`${exp.title} - ${exp.period}`}>\r\n                    {exp.description}\r\n                </Panel>))}\r\n            </Collapse>  \r\n        </AppSection>\r\n    )\r\n}\r\n\r\nexport default ExperienceSection\r\n","import { SkillLevel } from 'types'\r\n\r\nexport function toPercent(level: SkillLevel): number {\r\n    switch (level) {\r\n        case SkillLevel.Basic: return 20\r\n        case SkillLevel.Confident: return 50\r\n        case SkillLevel.Advanced: return 80\r\n        case SkillLevel.Professional: return 100\r\n    }\r\n}\r\n","import React, { FC } from 'react'\r\nimport { toPercent } from 'utils'\r\nimport { SkillLevel } from 'types'\r\nimport Progress from 'antd/lib/progress'\r\nimport Text from 'antd/lib/typography/Text'\r\n\r\ninterface SkillProps {\r\n    level: SkillLevel\r\n    children: string\r\n}\r\n\r\nconst SkillComponent: FC<SkillProps> = ({ level, children }) => {\r\n    return (\r\n        \r\n            <div style={{ textAlign: 'center' }}>\r\n                <div><Text strong>{children}</Text></div>\r\n                <Progress percent={toPercent(level)} showInfo={false} steps={5} trailColor=\"#f0f2f5\" />\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SkillComponent","import React from 'react'\r\nimport AppSection from 'components/AppSection'\r\nimport SectionTitle from 'components/SectionTitle'\r\nimport Skill from 'components/Skill'\r\nimport { useDict } from 'lang'\r\nimport Row from 'antd/lib/row'\r\nimport Col from 'antd/lib/col'\r\n\r\nfunction SkillsSection() {\r\n    const { skills, words } = useDict()\r\n\r\n    return (\r\n        <AppSection>\r\n            <SectionTitle icon={<i className=\"fi fi-rr-diploma\" />}>{words.skills}</SectionTitle>\r\n            <Row gutter={[10, 25]}>\r\n                {skills.map((skill, i) => (<Col xs={12} sm={8} md={6} lg={6} xl={4} xxl={2} key={i}>\r\n                    <Skill key={i} level={skill.level}>\r\n                        {skill.name}\r\n                    </Skill>\r\n                </Col>))}\r\n            </Row>\r\n        </AppSection>\r\n    )\r\n}\r\n\r\nexport default SkillsSection\r\n","import React from 'react'\r\nimport AppSection from 'components/AppSection'\r\nimport SectionTitle from 'components/SectionTitle'\r\nimport { useDict } from 'lang'\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint'\r\nimport Row from 'antd/lib/row'\r\nimport Col from 'antd/lib/col'\r\nimport Card from 'antd/lib/card'\r\nimport Text from 'antd/lib/typography/Text'\r\n\r\nfunction ProjectsSection() {\r\n    const { projects, words } = useDict()\r\n    const { sm } = useBreakpoint()\r\n    \r\n    const size = sm ? 'default' : 'small'\r\n\r\n    return (\r\n        <AppSection>\r\n            <SectionTitle icon={<i className=\"fi fi-rr-physics\" />}>{words.projects}</SectionTitle>\r\n            \r\n            <Row gutter={[5, 5]}>\r\n                {projects.map((project, i) => (<Col xs={24} sm={24} md={24} lg={12} key={i}>\r\n                    <Card size={size} hoverable title={project.name} style={{ height: '100%' }} extra={project.link ? <a href={project.link}>{words.more}</a> : null}>\r\n                        {project.description}\r\n                        <div>\r\n                            <Text strong>{words.uses}:</Text>\r\n                            <ul>\r\n                                {project.technologies.map((tech, i) => (\r\n                                    <li key={i} style={{ listStyle: 'circle', marginLeft: 20 }}>{tech}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </Card>\r\n                </Col>))}\r\n            </Row>\r\n        </AppSection>\r\n    )\r\n}\r\n\r\nexport default ProjectsSection\r\n","import React from 'react'\r\n\r\nimport DescriptionSection from 'blocks/DescriptionSection'\r\nimport EducationSection from 'blocks/EducationSection'\r\nimport ExperienceSection from 'blocks/ExperienceSection'\r\nimport SkillsSection from 'blocks/SkillsSection'\r\nimport ProjectsSection from 'blocks/ProjectsSection'\r\n\r\nfunction AppContent() {\r\n    return (\r\n        <div>\r\n            <DescriptionSection />\r\n            <EducationSection />\r\n            <ExperienceSection />\r\n            <SkillsSection />\r\n            <ProjectsSection />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppContent\r\n","import React, { useState, useEffect } from 'react'\nimport Layout from 'antd/lib/layout'\nimport Drawer from 'antd/lib/drawer'\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint'\nimport AppHeader from 'blocks/AppHeader'\nimport AppSider from 'blocks/AppSider'\nimport AppContent from 'blocks/AppContent'\nimport { LangContext } from 'lang'\nimport { LangType } from 'types'\nimport styles from './styles.module.css'\nimport Sider from 'antd/lib/layout/Sider'\nimport { Header, Content } from 'antd/lib/layout/layout'\n\nfunction App() {\n    const [lang, setLang] = useState<LangType>('ua')\n    const { md } = useBreakpoint()\n    const isMiddle = !!md\n    const [collapsed, setCollapsed] = useState<boolean>(!md)\n\n    useEffect(() => {\n        setCollapsed(!md)\n    }, [md])\n\n    const changeLang: (lang: LangType) => void = (lang) => {\n        setLang(lang)\n    }\n\n    const toggleCollapsed: () => void = () => {\n        setCollapsed((prev) => !prev)\n    }\n\n    return (\n        <LangContext.Provider value={{ lang, changeLang }}>\n            <Layout>\n                <Header className={styles.header}>\n                    <AppHeader toggleCollapsed={toggleCollapsed} />\n                </Header>\n                <Layout className={styles.contentLayout}>\n                    {isMiddle ? \n                        <Sider theme='light' width={220} className={styles.sider}>\n                            \n                                <AppSider />\n                            \n                        </Sider>\n                    : \n                        <Drawer\n                            style={{ padding: 0 }}\n                            placement=\"left\"\n                            visible={!collapsed}\n                            onClose={toggleCollapsed}\n                        >\n                            <AppSider />\n                        </Drawer>\n                    }\n\n                    <Content className={styles.content}>\n                        <AppContent />\n                    </Content>\n                </Layout>\n            </Layout>\n        </LangContext.Provider>\n    );\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './blocks/App'\n\nimport 'antd/dist/antd.css'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"styles_avatar__36Ckf\",\"infoLineIcon\":\"styles_infoLineIcon__1X5TO\",\"infoSectionTitle\":\"styles_infoSectionTitle__1Qd5s\",\"sider\":\"styles_sider__1MsiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__3PrE3\",\"content\":\"styles_content__1mrgp\",\"contentLayout\":\"styles_contentLayout__2rWcV\",\"sider\":\"styles_sider__1_XaN\"};"],"sourceRoot":""}